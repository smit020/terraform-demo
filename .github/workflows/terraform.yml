name: Terraform CI/CD (repo-root)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: {}

permissions:
  contents: read

env:
  AWS_REGION: ap-south-1
  TF_IN_AUTOMATION: "true"

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: .
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Terraform plugin cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.terraform.d/plugin-cache
            .terraform/plugins
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf') }}

      - name: Check dump.sql file exists
        run: |
          if [ ! -f "./db/dump.sql" ]; then
            echo "::error title=Missing file::db/dump.sql not found. Commit it or update Terraform to use \${path.module}/db/dump.sql (filemd5 requires a real file)."
            exit 1
          fi

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Write kubeconfig (if needed)
        env:
          KUBECONFIG_DATA: ${{ secrets.KUBECONFIG_DATA }}
        if: ${{ env.KUBECONFIG_DATA != '' }}
        run: |
          mkdir -p $HOME/.kube
          echo "$KUBECONFIG_DATA" > $HOME/.kube/config
          echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV

      - name: Terraform init
        run: terraform init -input=false

      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan (save file)
        run: terraform plan -out=tfplan -input=false

      - name: Upload terraform plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

      - name: Terraform apply (saved plan on main branch)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: terraform apply -input=false -auto-approve tfplan

      - name: Notify on failure
        if: failure()
        run: echo "::error::Terraform job failed. Please check the logs."
